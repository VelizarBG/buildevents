plugins {
	id 'fabric-loom' version '1.4.4'
	id "me.shedaniel.unified-publishing" version "0.1.+"
	id 'maven-publish'
}

version = project.minecraft_version+'-'+project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url 'https://maven.nucleoid.xyz' } // server translations
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation include("fr.catcore:server-translations-api:${project.server_translations}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
}

processResources {
	inputs.property "version", project.version
	inputs.property "fabric_version", project.fabric_version

	filesMatching("fabric.mod.json") {
		expand "version": project.version,
				"fabric_version": project.fabric_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

unifiedPublishing {
	project {
		displayName.set "v$project.version"
		releaseType.set "release"
		gameVersions.set(["1.18.2"])
		gameLoaders.set(["fabric"])

		relations {
			depends {
				curseforge.set "fabric-api"
				modrinth.set "fabric-api"
			}
		}

		System.getenv("changelog")?.with { String changelogg ->
			changelog.set changelogg
		}

		mainPublication tasks.remapJar

		System.getenv("curse_api_key")?.with { String key ->
			curseforge {
				token.set key
				id.set project.curseforge_id
				gameVersions.addAll "Java 17"
			}
		}

		System.getenv("modrinth_key")?.with { String key ->
			modrinth {
				token.set key
				id.set project.modrinth_id
				version = "$project.version"
			}
		}
	}
}
